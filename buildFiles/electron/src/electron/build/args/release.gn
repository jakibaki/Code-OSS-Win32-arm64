import("all.gn")
is_component_build = false
is_official_build = true

# This may be guarded behind is_chrome_branded alongside
# proprietary_codecs https://webrtc-review.googlesource.com/c/src/+/36321,
# explicitly override here to build OpenH264 encoder/FFmpeg decoder.
# The initialization of the decoder depends on whether ffmpeg has
# been built with H.264 support.
rtc_use_h264 = proprietary_codecs

# By default, Electron builds ffmpeg with proprietary codecs enabled. In order
# to facilitate users who don't want to ship proprietary codecs in ffmpeg, or
# who have an LGPL requirement to ship ffmpeg as a dynamically linked library,
# we build ffmpeg as a shared library.
is_component_ffmpeg = true


is_debug = false
symbol_level = 0
blink_symbol_level = 0
is_component_build = false
enable_resource_whitelist_generation = false

target_cpu = "arm64"
is_official_build = true
use_jumbo_build = true
v8_enable_future = true
v8_enable_debugging_features = false
enable_nacl = false
enable_remoting = false

angle_enable_d3d11 = true
angle_enable_d3d9 = true

enable_hevc_demuxing = true
enable_mpeg_h_audio_demuxing = true
enable_mse_mpeg2ts_stream_parser = true
enable_swiftshader = true
ffmpeg_branding = "Chrome"
proprietary_codecs = true

optimize_webui = true

# Embed resource.pak into binary to simplify deployment.
headless_use_embedded_resources = true
